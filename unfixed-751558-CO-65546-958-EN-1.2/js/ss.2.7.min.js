
this.NS = function(n, t, i, r) {
    "use strict";
    var h = {},
        e = {
            completion_status: "incomplete",
            credit: "credit",
            entry: "",
            exit: "suspend",
            launch_data: "",
            learner_id: "~",
            learner_name: "Example, Anne E.",
            location: "",
            mode: "normal",
            score: {
                raw: ""
            },
            session_time: "00:00:00",
            success_status: "unknown",
            suspend_data: {}
        },
        c = {
            aiccRelayUrl: "https://admin.safetyskills.com/api/aicc-relay/",
            debug: !1,
            demoFrameLimit: 0,
            isMobile: !1,
            surveyPostUrl: "https://admin.safetyskills.com/api/survey"
        },
        u = {
            bullets: "",
            captions: r,
            error: "100",
            frame: r,
            isKickback: !1,
            isCompleted: !1,
            kickback: r,
            language: "",
            muted: !1,
            nextEnabled: !1,
            paused: !1,
            previousEnabled: !0,
            time: new Date
        },
        a = {
            CommunicationIssue: " : An error occurred with the action you performed, if you continue to get this message please close and restart the course. \n\n Se ha producido un error en la accion realizada, si usted continua recibir este mensaje, por favor, cierre y reinicie el curso.",
            DemoExceeded: "Thank you for watching this course demo!",
            NotInitialized: "This course encountered an error. Your progress will NOT be recorded. Please close and restart the course. \n\n Este curso ha detectado un error. NO se grabara su progreso. Por favor, cierre y reincie el curso.",
            SubscriptionInactive: "Sorry this subscription is no longer active. Please contact support at https://safetyskills.com/support"
        },
        f = {
            disableNext: !1,
            frameNumber: r,
            kickback: r,
            on: {
                animate: r,
                mute: r,
                nextEnable: r,
                nextDisable: r,
                pause: r,
                play: r,
                previousEnable: r,
                previousDisable: r,
                progressBar: r,
                slidePlay: r,
                slidePause: r,
                slideMute: r,
                slideUnMute: r,
                scoFinish: r,
                unMute: r
            },
            presentor: r,
            title: r
        },
        s = {
            frames: [],
            languages: [],
            path: "sco.xml",
            quizTotal: 0,
            scaled_passing_score: r,
            title: "Example Course",
            XML: r
        },
        o = {
            _api: r,
            communication: "None",
            Commit: function() {
                var n = o.getApi(),
                    t = "false";
                return n && (t = o.communication === "2004" ? n.Commit("") : n.LMSCommit("")), t.toString()
            },
            getApi: function() {
                if (!o._api) {
                    var t = "API";
                    o.communication === "2004" && (t = "API_1484_11");
                    try {
                        n.parent !== null && n.parent !== n && (o._api = o.scanParents(n.parent, t));
                        o._api === r && n.top.opener !== null && (o._api = o.scanParents(n.top.opener, t))
                    } catch (i) {}
                }
                return o._api
            },
            GetErrorString: function(n) {
                var t = o.getApi(),
                    i = "";
                return t && (i = o.communication === "2004" ? t.GetErrorString(n) : t.LMSGetErrorString(n)), i.toString()
            },
            GetLastError: function() {
                var n = o.getApi(),
                    t = 100;
                return n && (t = o.communication === "2004" ? n.GetLastError() : n.LMSGetLastError()), t.toString()
            },
            GetValue: function(n) {
                var t = o.getApi(),
                    i = "",
                    r = "100";
                if (t) {
                    if (o.communication === "2004") {
                        switch (n) {
                            case "cmi.core.lesson_status":
                                n = "cmi.completion_status";
                                break;
                            case "cmi.core.entry":
                                n = "cmi.entry";
                                break;
                            case "cmi.core.session_time":
                                n = "cmi.session_time";
                                break;
                            case "cmi.core.total_time":
                                n = "cmi.total_time";
                                break;
                            case "cmi.core.lesson_location":
                                n = "cmi.location";
                                break;
                            case "cmi.core.student_name":
                                n = "cmi.learner_name";
                                break;
                            case "cmi.core.student_id":
                                n = "cmi.learner_id";
                                break;
                            case "cmi.student_preference._children":
                                n = "cmi.learner_preference._children";
                                break;
                            case "cmi.student_preference.language":
                                n = "cmi.learner_preference.language";
                                break;
                            case "cmi.core.score._children":
                                n = "cmi.score._children";
                                break;
                            case "cmi.core.score.raw":
                                n = "cmi.score.raw";
                                break;
                            case "cmi.core.score.min":
                                n = "cmi.score.min";
                                break;
                            case "cmi.core.score.max":
                                n = "cmi.score.max"
                        }
                        i = t.GetValue(n);
                        r = t.GetLastError().toString()
                    } else i = t.LMSGetValue(n), r = t.LMSGetLastError().toString();
                    r !== "0" && (i = "")
                }
                return i.toString()
            },
            Initialize: function() {
                var n = o.getApi(),
                    t = "false";
                return n && (t = o.communication === "2004" ? n.Initialize("") : n.LMSInitialize("")), t.toString()
            },
            scanParents: function(n, t) {
                for (var i = 0; n[t] === null && n.parent !== null && n.parent !== n;) {
                    if (i++, i > 50) return r;
                    n = n.parent
                }
                return n[t]
            },
            SetValue: function(n, t) {
                var i = o.getApi();
                if (i)
                    if (o.communication === "2004") {
                        switch (n) {
                            case "cmi.core.lesson_status":
                                (t === "passed" || t === "failed") && (n = "cmi.success_status");
                                (t === "completed" || t === "incomplete") && (n = "cmi.completion_status");
                                break;
                            case "cmi.core.session_time":
                                n = "cmi.session_time";
                                break;
                            case "cmi.core.lesson_location":
                                n = "cmi.location";
                                break;
                            case "cmi.core.exit":
                                n = "cmi.exit";
                                break;
                            case "cmi.core.score.raw":
                                n = "cmi.score.raw";
                                i.SetValue("cmi.score.scaled", t / 100)
                        }
                        i.SetValue(n, t)
                    } else n === "cmi.suspend_data" && (t = JSON.stringify(t)), i.LMSSetValue(n, t);
                return
            },
            Terminate: function() {
                var n = o.getApi(),
                    t = "false";
                return n && (t = o.communication === "2004" ? n.Terminate("") : n.LMSFinish("")), t.toString()
            }
        },
        d = function(n) {
            var t = n.completion_status,
                r = "";
            u.isCompleted || (t === "completed" || t === "passed") && (u.isCompleted = !0, r = "&completed=true");
            n.exit && n.exit !== "" && (t = t + "," + n.exit);
            p(c.aiccRelayUrl + r, "POST", {
                data: {
                    command: "PutParam",
                    version: "3.0",
                    session_id: i.aicc_sid,
                    aicc_data: "[CORE]\nlesson_location=" + n.location + "\nscore=" + n.score.raw + "\nlesson_status=" + t + "\ntime=" + n.session_time + "\n[CORE_LESSON]\r\nsuspend_data=" + JSON.stringify(n.suspend_data)
                },
                done: function(n) {
                    u.error = "0";
                    l(!1, n.responseText)
                },
                fail: nt
            })
        },
        ut = function() {
            p(c.aiccRelayUrl, "POST", {
                data: {
                    command: "ExitAU",
                    version: "3.0",
                    session_id: i.aicc_sid
                },
                done: function(n) {
                    l(!1, n.responseText)
                },
                fail: nt
            })
        },
        nt = function(n) {
            n.statusCode === 401 ? l(!0, a.SubscriptionInactive) : (u.error = "100", e.learner_id = "~")
        },
        p = function(t, i, r) {
            var o = "",
                f = {
                    done: function() {},
                    fail: function() {}
                },
                u = i === "POST" && n.XDomainRequest ? new n.XDomainRequest : new XMLHttpRequest,
                s, e;
            if (r) {
                if (r.cache === !1 && (t = t + "?_=" + (new Date).getTime()), r.data) {
                    s = [];
                    for (e in r.data) r.data.hasOwnProperty(e) && s.push(encodeURIComponent(e) + "=" + encodeURIComponent(r.data[e]));
                    o = s.join("&")
                }
                r.done && (f.done = r.done);
                r.fail && (f.fail = r.fail)
            }
            u.open(i, t);
            u.setRequestHeader ? (u.setRequestHeader("Content-type", "application/x-www-form-urlencoded; charset=UTF-8"), u.onreadystatechange = function() {
                this.readyState === 4 && (this.status === 200 ? f.done.call(f, this) : f.fail.call(f, this))
            }, setTimeout(function() {
                u.send(o)
            }, 0)) : (u.onload = function() {
                f.done.call(f, u)
            }, u.onerror = function() {
                f.fail.call(f, u)
            }, u.onprogress = function() {}, u.ontimeout = function() {}, u.onerror = function() {}, setTimeout(function() {
                u.send(o)
            }, 0))
        },
        b = function(n) {
            var t = u.isKickback ? "slide-kick" : "slide-frame";
            return n.indexOf(".swf") > -1 ? '<embed fullscreen="yes" height="100%" src="' + n + '" width="100%" id="' + t + '" name="' + t + '" allowScriptAccess="sameDomain" type="application/x-shockwave-flash" quality="high" wmode="opaque"><\/embed>' : '<iframe height="100%" id="' + t + '" scrolling="no" src="' + n + '" style="border: none; overflow: hidden;" width="100%"><\/iframe>'
        },
        tt = function(n) {
            for (var t = 0; t < s.frames.length; t++)
                if (s.frames[t].getAttribute("file") === n) return t + 1
        },
        w = function(n) {
            for (var t = 0; t < s.frames.length; t++)
                if (s.frames[t].getAttribute("file") === n) return s.frames[t];
            return s.frames[0]
        },
        k = function(i) {
            var f, o, r;
            if (e.learner_id === "~" && l(!0, a.NotInitialized), n.onunload = h.EndSco, n.onbeforeunload = h.EndSco, n.onpagehide = h.EndSco, t.onkeydown = function(n) {
                    var t = !1;
                    n.which === 39 && (u.nextEnabled || c.debug && n.shiftKey && n.ctrlKey) && (v(), t = !0);
                    n.which === 37 && u.previousEnabled && (it(), t = !0);
                    n.which === 38 && (rt(), t = !0);
                    c.debug || n.which === 119 && (c.debug = !0, t = !0, l(!1, "Debug enabled"));
                    t && n.preventDefault()
                }, e.location && e.location !== "")
                for (f = e.location.split("/")[0], o = h.GetLanguages(), r = 0; r < o.length; r++) o[r].id === f && (u.language = f);
            g(u.language);
            t.title = s.title;
            i(e.entry === "resume")
        },
        l = function(t, i) {
            t ? c.debug ? console.log(i) : alert(i) : n.console && console.log(i)
        },
        ft = function(n, t) {
            var r = new Date;
            r.setTime(n);
            var i = "",
                f = "000" + Math.floor(n / 36e5),
                e = "0" + r.getMinutes(),
                o = "0" + r.getSeconds(),
                s = "0" + Math.round(r.getMilliseconds() / 10);
            if (i = f.substr(f.length - 4) + ":" + e.substr(e.length - 2) + ":", i += o.substr(o.length - 2) + "." + s.substr(s.length - 2), t === "2004") {
                var u = i.split(":"),
                    h = u[0],
                    c = u[1],
                    l = u[2];
                i = "PT" + h + "H" + c + "M" + l + "S"
            }
            return i
        },
        et = function() {
            u.muted ? (f.on.unMute && f.on.unMute(), u.muted = !1, f.on.slideUnMute && f.on.slideUnMute()) : (f.on.mute && f.on.mute(), u.muted = !0, f.on.slideMute && f.on.slideMute())
        },
        v = function() {
            var n, e, t;
            if (c.demoFrameLimit && c.demoFrameLimit < tt(u.frame.getAttribute("file"))) alert(a.DemoExceeded);
            else {
                var i, f = !1,
                    o = u.isKickback ? u.frame.getElementsByTagName("kickback") : s.frames,
                    h = u.isKickback ? u.kickback.getAttribute("file") : u.frame.getAttribute("file");
                for (n = 0; n < o.length; n++)
                    if (e = o[n].getAttribute("file"), f) {
                        i = e;
                        break
                    } else h === e && (f = !0);
                f && i ? (t = w(i), y(t) && (u.isKickback ? u.kickback = t : u.frame = t)) : u.isKickback && (u.isKickback = !1, u.kickback = r, y(u.frame, !0))
            }
        },
        g = function(n) {
            for (var u, t, e, f = s.XML.getElementsByTagName("topics"), i, r = 0; r < f.length; r++) u = f[r], u.getAttribute("lang") === n && (i = u, s.title = i.getAttribute("title"));
            for (s.frames = i.getElementsByTagName("page"), s.quizTotal = 0, t = 0; t < s.frames.length; t++) e = s.frames[t], e.getAttribute("pType") === "quiz" && s.quizTotal++
        },
        ot = function(n) {
            var t = {
                    section: /^\s*\[\s*([^\]]*)\s*\]\s*$/,
                    param: /^\s*([\w\.\-\_]+)\s*=\s*(.*?)\s*$/,
                    comment: /^\s*;.*$/
                },
                r = {},
                u = n.substring(n.indexOf("[")).split(/\n|\r\n/g),
                i = null;
            return u.forEach(function(n) {
                var u, f;
                t.comment.test(n) || (t.param.test(n) ? (u = n.match(t.param), i ? r[i.toLowerCase()][u[1].toLowerCase()] = u[2] : r[u[1].toLowerCase()] = u[2]) : t.section.test(n) ? (f = n.match(t.section), r[f[1].toLowerCase()] = {}, i = f[1].toLowerCase()) : n.length === 0 && i && (i = null))
            }), r
        },
        st = function() {
            u.paused ? (f.on.play && f.on.play(), u.paused = !1, f.on.slidePlay && f.on.slidePlay()) : (f.on.pause && f.on.pause(), u.paused = !0, f.on.slidePause && f.on.slidePause())
        },
        it = function() {
            var i, r = u.isKickback ? u.frame.getElementsByTagName("kickback") : s.frames,
                e = u.isKickback ? u.kickback.getAttribute("file") : u.frame.getAttribute("file"),
                n, f, t;
            if (r[0].getAttribute("file") !== e) {
                for (n = 0; n < r.length; n++) {
                    if (f = r[n].getAttribute("file"), i && e === f) break;
                    i = f
                }
                t = w(i);
                y(t) && (u.isKickback ? u.kickback = t : u.frame = t)
            }
        },
        rt = function() {
            u.isKickback ? (f.kickback.empty(), f.kickback.append(b(u.kickback.getAttribute("file")))) : (f.presentor.empty(), f.presentor.append(b(u.frame.getAttribute("file"))));
            f.on.play && (f.on.play(), u.paused = !1)
        },
        y = function(t, i) {
            var r = t.getAttribute("file"),
                w = tt(r),
                k = t.getAttribute("end") === "true",
                g = t.getAttribute("pType") === "survey",
                nt = t.getAttribute("pType") === "quiz" || t.getAttribute("pType") === "summary",
                y = t.getElementsByTagName("narration")[0],
                p = t.getElementsByTagName("bullets")[0],
                v;
            if (e.learner_id !== "~") {
                var it = new Date,
                    rt = it.getTime() - u.time.getTime(),
                    ut = ft(rt, o.communication);
                u.isKickback || (e.location = r);
                e.session_time = ut.toString();
                (k || g) && (e.exit = "", e.completion_status = s.scaled_passing_score ? "passed" : "completed");
                switch (o.communication) {
                    case "AICC":
                        d(e);
                        break;
                    case "SCORM":
                        u.isKickback || (o.SetValue("cmi.core.lesson_location", e.location), u.error = o.GetLastError());
                        u.error === "0" && (o.SetValue("cmi.core.session_time", e.session_time), o.SetValue("cmi.core.exit", e.exit), o.SetValue("cmi.core.lesson_status", e.completion_status), o.SetValue("cmi.core.score.raw", e.score.raw), o.SetValue("cmi.suspend_data", e.suspend_data), u.error = o.GetLastError());
                        u.error === "0" && (o.Commit(), u.error = o.GetLastError())
                }
            } else l(!0, a.NotInitialized);
            return u.error === "0" || c.debug ? (f.frameNumber && f.frameNumber.html(w + " / " + s.frames.length), f.on.progressBar && (v = w / s.frames.length, isNaN(v) && (v = 0), v > 1 && (v = 1), f.on.progressBar(v * 100)), u.captions = y && y !== null ? n.XDomainRequest ? y.xml : (new XMLSerializer).serializeToString(y) : "", u.bullets = p && p !== null ? n.XDomainRequest ? p.xml : (new XMLSerializer).serializeToString(p) : "", i ? (f.kickback.empty(), f.kickback.hide(), f.presentor.show(), u.nextEnabled = !1, u.previousEnabled = !0) : (u.isKickback ? f.kickback && (f.kickback.show(), f.presentor.hide(), f.kickback.empty(), f.kickback.append(b(r))) : f.presentor && (f.kickback.hide(), f.presentor.show(), f.presentor.empty(), f.presentor.append(b(r))), u.previousEnabled = u.isKickback ? u.frame.getElementsByTagName("kickback")[0].getAttribute("file") !== r : s.frames[0].getAttribute("file") !== r, u.nextEnabled = !u.isKickback && (nt || f.disableNext && w > 1 && !g) ? !1 : !0), u.previousEnabled ? f.on.previousEnable() : f.on.previousDisable(), u.nextEnabled ? f.on.nextEnable() : f.on.nextDisable(), (nt || g || k) && h.SlideStart({}), f.on.play && (f.on.play(), u.paused = !1), k && f.on.scoFinish(), !0) : (l(!0, o.GetErrorString(u.error) + a.CommunicationIssue), !1)
        };
    return h.InitSco = function(n) {
        var f = t.createElement("audio"),
            r;
        f.id = "end";
        f.src = "end-sound.mp3";
        f.preload = "auto";
        t.body.appendChild(f);
        r = t.createElement("audio");
        r.id = "blank";
        r.src = "blank.mp3";
        r.preload = "auto";
        t.body.appendChild(r);
        c.isMobile = /iPhone|iPod|iPad|Android|BlackBerry|BB10|RIM Tablet|wins Phone|SymbianOS|Kindle|Silk/i.test(navigator.userAgent.toLowerCase());
        i.debug && (c.debug = !0, l(!1, "Debug Enabled"));
        i.demo ? (c.demoFrameLimit = i.demo, l(!1, "Demo selected")) : i.aicc_url && i.subid ? (o.communication = "AICC", c.aiccRelayUrl += i.subid + "?relay-url=" + i.aicc_url, l(!1, "AICC selected")) : (o.communication = "SCORM", l(!1, "SCORM selected"));
        var h = t.querySelector("meta[name=author]"),
            v = new Date,
            y = Math.floor(v.getTime() / 864e5 - v.getTimezoneOffset() / 1440 + 2440587.5);
        h && h.getAttribute("content") < y ? l(!0, a.SubscriptionInactive) : (i.sco && (s.path = i.sco), p(s.path, "GET", {
            cache: !1,
            done: function(t) {
                s.XML = t.responseXML;
                s.languages = s.XML.getElementsByTagName("language");
                u.language = s.XML.getElementsByTagName("languages")[0].getAttribute("default");
                var r = s.XML.getElementsByTagName("sco")[0];
                r.getAttribute("mastery-score") && (s.scaled_passing_score = r.getAttribute("mastery-score"));
                switch (o.communication) {
                    case "AICC":
                        p(c.aiccRelayUrl, "POST", {
                            data: {
                                command: "GetParam",
                                version: "3.0",
                                session_id: i.aicc_sid
                            },
                            done: function(t) {
                                var i, r, f, o;
                                l(!1, t.responseText);
                                i = ot(t.responseText);
                                r = i.core.lesson_status.toLowerCase();
                                "n;i".split(";").indexOf(r.slice(0, 1)) > -1 ? e.completion_status = "incomplete" : (e.completion_status = r, u.isCompleted = !0);
                                r.indexOf(",") > -1 && (f = r.split(",")[1], f.slice(0, 1) === "r" && (e.entry = "resume"), f.slice(0, 1) === "a" && (e.entry = "ab-initio"));
                                e.learner_id = i.core.student_id;
                                e.learner_name = i.core.student_name;
                                e.location = i.core.lesson_location;
                                o = i.core.score.split(",");
                                e.score.raw = o[0];
                                i.core_lesson && i.core_lesson.suspend_data && (e.suspend_data = JSON.parse(i.core_lesson.suspend_data));
                                k(n);
                                d(e)
                            },
                            fail: function(t) {
                                t.statusCode === 401 && l(!0, a.SubscriptionInactive);
                                k(n)
                            }
                        });
                        break;
                    case "SCORM":
                        o.Initialize() === "true" && (o.GetValue("cmi.core.lesson_status") === "not attempted" && o.SetValue("cmi.core.lesson_status", "incomplete"), e.learner_id = o.GetValue("cmi.core.student_id"), e.learner_name = o.GetValue("cmi.core.student_name"), e.entry = o.GetValue("cmi.core.entry"), e.location = o.GetValue("cmi.core.lesson_location"), e.score.raw = o.GetValue("cmi.core.score.raw"), o.GetValue("cmi.suspend_data") !== "" && (e.suspend_data = JSON.parse(o.GetValue("cmi.suspend_data"))));
                        k(n);
                        break;
                    case "TinCan":
                        break;
                    default:
                        k(n)
                }
            }
        }))
    }, h.EndSco = function() {
        if (e.learner_id !== "~") {
            switch (o.communication) {
                case "AICC":
                    d(e);
                    ut();
                    break;
                case "SCORM":
                    o.Commit();
                    o.Terminate()
            }
            e.learner_id = "~"
        }
    }, h.GetLanguages = function() {
        for (var t, i = [], n = 0; n < s.languages.length; n++) t = s.languages[n], i[n] = {
            id: t.getAttribute("id"),
            label: t.getAttribute("label")
        };
        return i
    }, h.SelectLanguage = function(n) {
        t.getElementById("blank").play();
        u.language = n ? n : s.XML.getElementsByTagName("languages")[0].getAttribute("default");
        g(u.language);
        u.frame = s.frames[0]
    }, h.Resume = function() {
        var i, r, n, f;
        if (t.getElementById("blank").play(), e.location && e.location !== "")
            for (i = e.location.split("/")[0], r = h.GetLanguages(), n = 0; n < r.length; n++) r[n].id === i && (u.language = i);
        g(u.language);
        f = w(e.location);
        f && (u.frame = f)
    }, h.GetLocalizedValues = function() {
        for (var r, t, n, f = {}, i = 0; i < s.languages.length; i++)
            if (r = s.languages[i], r.getAttribute("id") === u.language)
                for (t = r.childNodes, n = 0; n < t.length; n++) f[t[n].tagName] = t[n].textContent ? t[n].textContent : t[n].firstChild.nodeValue;
        return f
    }, h.InitInterface = function(n) {
        t.getElementById("blank").play();
        f.on.animate = n.onAnimate;
        f.on.progressBar = n.setProgressBar;
        f.on.scoFinish = n.onScoFinish;
        f.title = n.titleField;
        f.frameNumber = n.frameField;
        f.presentor = n.presentorFrame;
        f.kickback = n.kickbackFrame;
        f.presentor.show();
        f.kickback.hide();
        f.title && (f.title.html(s.title), t.title = s.title);
        y(u.frame)
    }, h.Mute = function(n) {
        return f.on.mute = n.mute, f.on.unMute = n.unMute, f.on.unMute(), et
    }, h.Next = function(n) {
        return f.on.nextDisable = n.onDisable, f.on.nextEnable = n.onEnable, n.disableOnNext && (f.disableNext = n.disableOnNext), v
    }, h.Play = function(n) {
        return f.on.play = n.play, f.on.pause = n.pause, st
    }, h.Previous = function(n) {
        return f.on.previousDisable = n.onDisable, f.on.previousEnable = n.onEnable, it
    }, h.Replay = function() {
        return rt
    }, h.GetStudentName = function() {
        return e.learner_name
    }, h.SubmitSurvey = function(n) {
        if (n) {
            var i = {
                Comments: n.Comments,
                CourseName: t.title,
                Emphasis: n.Emphasis,
                Intro: n.Intro,
                Overall: n.Overall,
                ScreenHeight: screen.height,
                ScreenWidth: screen.width,
                Student: "",
                Summaries: n.Summaries,
                Thoroughness: n.Thoroughness,
                Url: location.href,
                UserAgent: navigator.userAgent
            };
            i.Student = n.IsAnonymous ? "anonymous" : e.learner_name;
            p(c.surveyPostUrl, "POST", {
                data: i,
                done: function() {
                    l(!1, "Survey Data: " + i)
                }
            })
        }
        v()
    }, h.SlideStart = function(n) {
        f.on.slidePause = n.slidePause;
        f.on.slidePlay = n.slidePlay;
        f.on.slideMute = n.slideMute;
        f.on.slideUnMute = n.slideUnMute;
        f.on.animate && f.on.animate(u.bullets, u.captions);
        u.muted && f.on.slideMute && f.on.slideMute()
    }, h.SlideEnd = function() {
        setTimeout(function() {
            t.getElementById("end").play();
            c.isMobile ? v() : (f.on.nextEnable(), u.nextEnabled = !0)
        }, 1e3)
    }, h.ScoreResults = function() {
        var n = 0,
            t;
        return e.suspend_data.answered && (n = e.suspend_data.answered.length), t = n / s.quizTotal, {
            answered: n,
            passed: t >= s.scaled_passing_score,
            percent: (t * 100).toFixed(2),
            total: s.quizTotal
        }
    }, h.QuizCorrect = function() {
        var n, t, i;
        s.scaled_passing_score && u.frame.getAttribute("pType") === "quiz" && (n = -1, e.suspend_data.answered ? n = e.suspend_data.answered.indexOf(u.frame.getAttribute("file")) : e.suspend_data.answered = [], n === -1 && (e.suspend_data.answered.push(u.frame.getAttribute("file")), t = 0, e.suspend_data.answered && (t = e.suspend_data.answered.length), i = t / s.quizTotal, e.score.raw = (i * 100).toFixed(2)));
        v()
    }, h.QuizIncorrect = function() {
        var n = u.frame.getElementsByTagName("kickback")[0],
            t, i, o, r, f;
        s.scaled_passing_score ? (t = -1, e.suspend_data.answered && (t = e.suspend_data.answered.indexOf(u.frame.getAttribute("file"))), t > -1 && (e.suspend_data.answered.splice(t, 1), i = 0, e.suspend_data.answered && (i = e.suspend_data.answered.length), o = i / s.quizTotal, e.score.raw = (o * 100).toFixed(2)), n ? (r = w(n.getAttribute("file")), u.isKickback = !1, y(r) && (u.frame = r)) : v()) : n && (f = w(n.getAttribute("file")), u.isKickback = !0, y(f) && (u.kickback = f))
    }, l(!1, "SS v2.7: Loaded"), h
}(this, this.document, this.querystrings || {});
//# sourceMappingURL=ss.2.7.min.js.map
